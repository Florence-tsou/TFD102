@import"./font.css";body{margin:0}header{border:1px solid}@media all and (min-width: 721px)and (max-width: 996px){.text{font-size:40px}h1{font:50px}}@media all and (max-width: 720px){.text{font-size:20px}}body{font-size:30px;color:#000}@media all and (max-width: 720px){body{font-size:48px;color:#eb4b4b;background-color:#5f0}}@media all and (min-width: 721px)and (max-width: 996px){body{font-size:48px;color:#ebb84b;background-color:#3f1852}}@media all and (min-width: 1201px){body{font-size:48px;color:#764beb;background-color:#e29393}}.gray{background-color:gray}.red{background-color:red}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLnNjc3MiLCJiYXNlL19yZXNldC5zY3NzIiwibGF5b3V0L19oZWFkZXIuc2NzcyIsIm1peGluL19taXhpbi5zY3NzIiwicGFnZS9fZ2FtZS5zY3NzIiwicGFnZS9faW5kZXguc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNUSxvQkNOUixLQUNFLFNDREYsT0FDRSxpQkN1TEEsd0RDdkxBLE1BQ0UsZUFFRixHQUNFLFdENktGLGtDQ3RLQSxNQUNFLGdCQ2JKLEtBQ0UsZUFDQSxXRmdMQSxrQ0U1S0EsS0FDRSxlQUNBLGNBQ0EsdUJGK0tGLHdERTFLQSxLQUNFLGVBQ0EsY0FDQSwwQkY2S0YsbUNFeEtBLEtBQ0UsZUFDQSxjQUNBLDBCTGdCSixNQUNFLHNCQUdGLEtBQ0UiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8g5qqU5ZCN5YmN6Z2i5YqgX++8jOWwseS4jeacg+iiq+e3qOitr1xyXG4vLyBAaW1wb3J0IOW8leWFpeWFtuS7luaqlOahiO+8jOacgOW+jOmDveacg+iiq3N0eWxlLnNjc3PkuIDotbfkuJ/ljrtzdHlsZS5jc3NcclxuLy8g5byV5YWlc2Fzc++8jOmZhOaqlOWQjeW7uuitsOS4jeWvq1xyXG4vL1xyXG5cclxuXHJcbkBpbXBvcnQgdXJsKCcuL2ZvbnQuY3NzJyk7IC8vIOWOn+eUn2Nzc++8jOimgemZhOaqlOWQjVxyXG5cclxuXHJcblxyXG4vLyBiYXNzXHJcbkBpbXBvcnQgJy4uL3Nhc3MvYmFzZS9jb2xvcic7XHJcbkBpbXBvcnQgJy4uL3Nhc3MvYmFzZS9jb21tb24nO1xyXG5AaW1wb3J0ICcuLi9zYXNzL2Jhc2UvZm9udCc7XHJcbkBpbXBvcnQgJy4uL3Nhc3MvYmFzZS9yZXNldCc7XHJcbkBpbXBvcnQgJy4uL3Nhc3MvYmFzZS9yd2QnO1xyXG5cclxuXHJcbi8vIG1peGluXHJcbkBpbXBvcnQgJy4uL3Nhc3MvbWl4aW4vbWl4aW4nO1xyXG5cclxuLy8gbGF5b3V0XHJcbkBpbXBvcnQgJy4uL3Nhc3MvbGF5b3V0L2Zvb3Rlcic7XHJcbkBpbXBvcnQgJy4uL3Nhc3MvbGF5b3V0L2hlYWRlcic7XHJcbkBpbXBvcnQgJy4uL3Nhc3MvbGF5b3V0L2xvZ2luJztcclxuXHJcbi8vIG1vZHVsZVxyXG5AaW1wb3J0ICcuLi9zYXNzL21vZHVsZS9idG4nO1xyXG5cclxuLy9wYWdlXHJcbkBpbXBvcnQgJy4uL3Nhc3MvcGFnZS9hYm91dCc7XHJcbkBpbXBvcnQgJy4uL3Nhc3MvcGFnZS9jb250YWN0JztcclxuQGltcG9ydCAnLi4vc2Fzcy9wYWdlL2dhbWUnO1xyXG5AaW1wb3J0ICcuLi9zYXNzL3BhZ2UvaW5kZXgnO1xyXG5cclxuXHJcbi8vIOWll+S7tlxyXG4vLyBAaW1wb3J0ICcuLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwLXNhc3MvYXNzZXRzL3N0eWxlc2hlZXRzL2Jvb3RzdHJhcCc7XHJcblxyXG5cclxuXHJcbi5ncmF5e1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XHJcbn1cclxuXHJcbi5yZWR7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkOztcclxufSIsImJvZHl7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIFxyXG59IiwiaGVhZGVye1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkO1xyXG59IiwiLy8g5a6j5ZGK5pa55byPXHJcbkBtaXhpbiBmb250KCRzaXplKXtcclxuICBmb250LXNpemU6ICRzaXplO1xyXG4gIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbn1cclxuXHJcbkBtaXhpbiBtYXJnaW5Ub3AoJHZhbCl7XHJcbiAgbWFyZ2luLXRvcDogJHZhbDtcclxuICBtYXJnaW4tYm90dG9tOiAkdmFsICoyO1xyXG4gIEBpbmNsdWRlIGZvbnQoMTRweCk7XHJcbn1cclxuXHJcbkBtaXhpbiBtYXJnaW5BdXRvKCl7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcbi8vIDog6aCQ6Kit5YC8XHJcbkBtaXhpbiByZWN0KCR3OiAxMDBweCAsICRoOiAxMDBweCwgJGJnYzogI2ZmZil7XHJcbiAgd2lkdGg6ICR3O1xyXG4gIGhlaWdodDogJGg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJnYztcclxufVxyXG5cclxuQG1peGluIHJlY3RfbmV3KCR3ICwgJGg6JHcpe1xyXG4gIHdpZHRoOiAkdztcclxuICBoZWlnaHQ6ICRoO1xyXG59XHJcblxyXG5AbWl4aW4gYnRuKCR3ICwgJHBhZGRpbmcgLCAkciAsICRiZ2M6bnVsbCl7XHJcbiAgd2lkdGg6ICR3O1xyXG4gIHBhZGRpbmc6ICRwYWRkaW5nIDA7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmdjO1xyXG5cclxuICBAaWYgJHIgPT0gdHJ1ZXtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICB9XHJcblxyXG4gICY6aG92ZXJ7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgLy8gYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKCRiZ2MgLCAyMCk7IC8vZGFya2Vu6K6K5pqXXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCRiZ2MgLCAyMCk7IC8vIGxpZ2h0ZW7ororkuq5cclxuICB9XHJcblxyXG59XHJcblxyXG5cclxuQG1peGluIHRleHRib3goJGNsYXNzICwgJHcpe1xyXG4gICN7JGNsYXNzfXsgLy8g5LiN5bu66K2w6YCZ5qij55So77yM6bq754WpXHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBAaW5jbHVkZSByZWN0X25ldygkdyo1ICwgJHcpO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzMzMztcclxuICAgIEBjb250ZW50OyAvLyDoi6XnlKgkY2xhc3Plr6vms5XvvIzmg7PopoHlho3poY3lpJbliqDmlrBjc3MoZXg6Zm9udC1zaXplKeWwseW+l+WKoOmAmeWAi1xyXG4gIH1cclxufVxyXG5cclxuLy8gZ3JpZFxyXG5AbWl4aW4gZ3JpZCgkY29sKXtcclxuICBAZm9yICRpIGZyb20gMSB0aHJvdWdoICRjb2wge1xyXG4gICAgICAuY29sLSN7JGl9e1xyXG4gICAgICAgIHdpZHRoOiAoICRpIC8gJGNvbCApICogMTAwJSA7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICAgIH0gXHJcbiAgfVxyXG59XHJcblxyXG4vLyDpgYvnlKhcclxuQG1peGluIHB1c2goJG51bSl7XHJcbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkbnVte1xyXG4gICAgLnB1c2gtbGVmdC0jeyRpfXtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICBsZWZ0IDogJGkgKiAxcHg7XHJcbiAgICB9XHJcbiAgICAucHVzaC10b3AtI3skaX17XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgbGVmdCA6ICRpICogMXB4O1xyXG4gICAgfVxyXG4gICAgLnB1c2gtYm90dG9tLSN7JGl9e1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIGxlZnQgOiAkaSAqIDFweDtcclxuICAgIH1cclxuICAgIC5wdXNoLXJpZ2h0LSN7JGl9e1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIGxlZnQgOiAkaSAqIDFweDtcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcblxyXG5AbWl4aW4gcHVzaGFsbCgkbnVtICwgJGRpcil7XHJcbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkbnVte1xyXG4gICAgLnB1c2gtI3skZGlyfS0jeyRpfXtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAjeyRkaXJ9IDogJGkgKiAxcHg7XHJcbiAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG4gIH1cclxufTtcclxuXHJcbkBtaXhpbiBtYXJnaW4oJG51bSwgJGRpcil7XHJcbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkbnVtIHtcclxuICAgIC5tYXJnaW4tI3skZGlyfS0jeyRpfSB7XHJcbiAgICAgIG1hcmdpbi0jeyRkaXJ9OiAkaSAqIDFweDtcclxuICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyAkaW1nIDogYm94IGEgYiBjIGJnOyAvLyBsaXN0XHJcbkBtaXhpbiBpbWcoJGltZyAsICRzdHlsZTpqcGcpIHsgLy8gOumgkOiore+8jOacquWRvOWPq+WwseeUqOmAmeWAi1xyXG4gIEBlYWNoICRhIGluICRpbWd7IC8vIGEg5b6eIGltZyDlj5blvpdcclxuICAgIC4jeyRhfXtcclxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi9pbWFnZXMvI3skYX0uI3skc3R5bGV9XCIpO1xyXG4gICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgICBAY29udGVudDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8vIEBpbmNsdWRlIGxheW91dChmdWxs5ru/54mIICwg6auY5bqmICkgIOWmguaenOS4jeaYr+a7v+eJiOeahOipsSDluLbmlbjlgLzpgLLljrvljbPlj69cclxuQG1peGluIGxheW91dCgkdGhlbWUsICRoKSB7XHJcbiAgQGlmICR0aGVtZSA9PSBmdWxse1xyXG4gICAgd2lkdGg6IDEwMHZ3O1xyXG4gICAgaGVpZ2h0OiAkaDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIH1AZWxzZXtcclxuICAgIHdpZHRoOiAkdGhlbWU7XHJcbiAgICBoZWlnaHQ6ICRoO1xyXG4gICAgQGluY2x1ZGUgbWFyZ2luQXV0bygpO1xyXG4gIH1cclxufVxyXG5cclxuLy8g5qij5p2/55qE6Imy5aGKIEBpbmNsdWRlIHRoZW1lKHRydWUgb3IgZmFsc2UpIHRydWUg5pyD5Y+N6L2J6aGP6Imy77yI5a2X6auU6aGP6ImyIOiDjOaZr+iJsu+8iVxyXG5AbWl4aW4gdGhlbWUoJGxpZ2h0LXRoZW1lOiB0cnVlICwgJGJnY29sb3I6bnVsbCl7XHJcbiAgQGlmICRsaWdodC10aGVtZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCRiZ2MgLCAxMDApO1xyXG4gICAgY29sb3I6IGRhcmtlbigkZm9udGNvbG9yICwgMTAwKTtcclxuICB9QGVsc2V7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmdjb2xvcjtcclxuICB9XHJcbn1cclxuXHJcblxyXG4vLyDkvb/nlKhoMSB+IGg15a2X6auU5aSn5bCPIEBpbmNsdWRlXHJcbkBtaXhpbiB0aXRsZV9tb2R1bGUoJHRpdGxlX2gpIHtcclxuICBAZWFjaCAkayAsICR2IGluICR0aXRsZV9oe1xyXG4gICAgI3ska317XHJcbiAgICAgIGZvbnQtc2l6ZTogJHY7XHJcbiAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuXHJcbi8vIGNvbG9yIG1hcCBAaW5jbHVkZSBjb2xvcm1hcCjpoY/oibJtYXAg5bCN5oeJKSAoKVxyXG5AbWl4aW4gY29sb3JtYXAoJGNvbG9yLW1hcCAsICRiZ2M6IzAwMCkge1xyXG4gIEBlYWNoICRrICwgJHYgaW4gJGNvbG9yLW1hcHtcclxuICAgIC50ZXh0LSN7JGt9IHtcclxuICAgICAgY29sb3IgOiAkdjtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJnYztcclxuICAgICAgcGFkZGluZzogMTBweCA0MHB4O1xyXG4gICAgICB0cmFuc2l0aW9uOiAuMnMgYWxsIGVhc2UtaW4tb3V0O1xyXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgICAmOmhvdmVye1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oIzAwMCwgMjApO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5cclxuXHJcblxyXG5AbWl4aW4gbW9iaWxlKCkge1xyXG4gIEBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGggOiAkbW9iaWxlKXtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufTtcclxuXHJcbkBtaXhpbiB0YWJsZXQoKSB7XHJcbiAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aCA6ICRtb2JpbGUgKyAxcHgpIGFuZCAobWF4LXdpZHRoOiAkdGFibGV0KXtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufTtcclxuXHJcbkBtaXhpbiBkZXNrdG9wKCkge1xyXG4gIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGggOiAkZGVza3RvcCArIDFweCl7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn07IiwiQGluY2x1ZGUgdGFibGV0e1xyXG4gIC50ZXh0IHtcclxuICAgIGZvbnQtc2l6ZTogNDBweDsgIFxyXG4gIH0gIFxyXG4gIGgxIHtcclxuICAgIGZvbnQ6IDUwcHg7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuXHJcbkBpbmNsdWRlIG1vYmlsZSB7XHJcbiAgLnRleHQge1xyXG4gICAgZm9udC1zaXplOiAyMHB4OyBcclxuICB9IFxyXG59XHJcbiIsImJvZHl7XHJcbiAgZm9udC1zaXplOiAzMHB4O1xyXG4gIGNvbG9yOiAjMDAwO1xyXG59XHJcblxyXG5AaW5jbHVkZSBtb2JpbGUoKXtcclxuICBib2R5e1xyXG4gICAgZm9udC1zaXplOiA0OHB4O1xyXG4gICAgY29sb3I6IHJnYigyMzUsIDc1LCA3NSk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoODUsMjU1LDApO1xyXG4gIH1cclxufVxyXG5cclxuQGluY2x1ZGUgdGFibGV0KCl7XHJcbiAgYm9keXtcclxuICAgIGZvbnQtc2l6ZTogNDhweDtcclxuICAgIGNvbG9yOiByZ2IoMjM1LCAxODQsIDc1KTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig2MywgMjQsIDgyKTtcclxuICB9XHJcbn1cclxuXHJcbkBpbmNsdWRlIGRlc2t0b3AoKXtcclxuICBib2R5e1xyXG4gICAgZm9udC1zaXplOiA0OHB4O1xyXG4gICAgY29sb3I6IHJnYigxMTgsIDc1LCAyMzUpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyNiwgMTQ3LCAxNDcpO1xyXG4gIH1cclxufSJdfQ== */
